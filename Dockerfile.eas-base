FROM ubuntu:20.04

ARG DEBIAN_FRONTEND='noninteractive'
ARG ENVIRONMENT='development'
ARG PIP_DEFAULT_TIMEOUT=1000

# App root required to be ENV due to start.sh script
ENV VENV_ROOT=/venv
ENV SHELL_CONF=/root/.bashrc
ENV PYTHON_VERSION='python3.9'
ENV NODE_VERSION='v16.14.0'
ENV NVM_VERSION='v0.39.1'
ENV VENV_UTILS=/venv/eas-utils
ENV UTILS_DIR=/eas/emergency-alerts-utils

# Copy the bashrc file and remove command that exits bashrc file if not running interactively.
RUN mv $SHELL_CONF $SHELL_CONF.bak; cat $SHELL_CONF.bak | sed 's/\[ -z "$PS1" \] && return//' > $SHELL_CONF;

# Update OS to latest.
RUN apt-get update -y

# Install commonly used tools, python related pre-reqs and ca-certs
RUN apt-get install wget curl git unzip vim make jq apt-utils gnupg telnet dnsutils build-essential ca-certificates libcurl4-openssl-dev libssl-dev gcc libpq-dev -y --no-install-recommends
RUN apt install docker snapd -y
RUN snap install docker -y

# Install Python and VENV.
RUN apt-get install $PYTHON_VERSION $PYTHON_VERSION-venv python3-pip python3-dev python3-wheel python3-venv libpython3.9-dev -y --no-install-recommends && \
    mkdir $VENV_ROOT

# Install AWS CLI
RUN curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o 'awscliv2.zip'; unzip 'awscliv2.zip' && \
    ./aws/install;

# Install Node JS with NVM.
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash

# Validate the installation
RUN . $SHELL_CONF && nvm install $NODE_VERSION && nvm use $NODE_VERSION && \
    node --version || echo 'Could not find node version';

# Build emergency-alerts-utils
COPY . $UTILS_DIR
WORKDIR $UTILS_DIR
RUN $PYTHON_VERSION -m venv $VENV_UTILS && . $VENV_UTILS/bin/activate && $PYTHON_VERSION -m pip install wheel cmake && $PYTHON_VERSION -m pip install --upgrade pip wheel setuptools && make bootstrap
